[{"D:\\ExamSystem\\exam-system\\src\\reportWebVitals.js":"1","D:\\ExamSystem\\exam-system\\src\\App.js":"2","D:\\ExamSystem\\exam-system\\src\\index.js":"3","D:\\ExamSystem\\exam-system\\src\\Components\\Exam.js":"4","D:\\ExamSystem\\exam-system\\src\\Components\\ExamCreation.js":"5","D:\\ExamSystem\\exam-system\\src\\Components\\Question.js":"6","D:\\ExamSystem\\exam-system\\src\\Components\\Choice.js":"7","D:\\ExamSystem\\exam-system\\src\\Components\\SignUp.js":"8","D:\\ExamSystem\\exam-system\\src\\Components\\Login.js":"9","D:\\ExamSystem\\exam-system\\src\\Components\\StudentLogin.js":"10","D:\\ExamSystem\\exam-system\\src\\Components\\SimpleTabs.js":"11"},{"size":362,"mtime":1611588667624,"results":"12","hashOfConfig":"13"},{"size":2353,"mtime":1614260463414,"results":"14","hashOfConfig":"13"},{"size":449,"mtime":1613485935527,"results":"15","hashOfConfig":"13"},{"size":7180,"mtime":1614262337364,"results":"16","hashOfConfig":"13"},{"size":7642,"mtime":1614263709218,"results":"17","hashOfConfig":"13"},{"size":2091,"mtime":1614262337363,"results":"18","hashOfConfig":"13"},{"size":814,"mtime":1614260407210,"results":"19","hashOfConfig":"13"},{"size":6515,"mtime":1614262337363,"results":"20","hashOfConfig":"13"},{"size":3836,"mtime":1614260407208,"results":"21","hashOfConfig":"13"},{"size":4017,"mtime":1614260407210,"results":"22","hashOfConfig":"13"},{"size":7163,"mtime":1614262337363,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"5vgzmt",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"D:\\ExamSystem\\exam-system\\src\\reportWebVitals.js",[],["51","52"],"D:\\ExamSystem\\exam-system\\src\\App.js",["53"],"import \"./App.css\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport SimpleTabs from \"./Components/SimpleTabs\";\nimport Exam from \"./Components/Exam.js\";\nimport ExamCreation from \"./Components/ExamCreation.js\";\nimport SignUp from \"./Components/SignUp.js\";\nimport Login from \"./Components/Login.js\";\nimport StudentLogin from \"./Components/StudentLogin\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditSharpIcon from \"@material-ui/icons/EditSharp\";\nimport ListAltSharpIcon from \"@material-ui/icons/ListAltSharp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  logButton: {\n    marginLeft: theme.spacing(120),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar variant=\"dense\">\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <EditSharpIcon />\n            </IconButton>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"menu\"\n            >\n              <ListAltSharpIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\">\n              ONLINE EXAMINATION SYSTEM\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </div>\n\n      <Router>\n        <Switch>\n          <Route exact path=\"/ExamCreation\" component={ExamCreation} />\n          <Route path=\"/instructor\" component={SimpleTabs} />\n          <Route exact path=\"/\" component={Login}></Route>\n          <Route\n            exact\n            path=\"/ExamLogin/:examToken\"\n            component={StudentLogin}\n          ></Route>\n          <Route path=\"/SignUp\" component={SignUp}></Route>\n          <Route path=\"/Exam\" component={Exam} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","D:\\ExamSystem\\exam-system\\src\\index.js",[],"D:\\ExamSystem\\exam-system\\src\\Components\\Exam.js",["54","55"],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"50%\",\r\n    marginLeft: \"25%\",\r\n    marginTop: \"4%\",\r\n    // maxWidth: 360,\r\n    overflow: \"auto\",\r\n    // maxHeight: 500,\r\n  },\r\n\r\n  typ: {\r\n    align: \"justify\",\r\n  },\r\n\r\n  child: {\r\n    width: \"100%\",\r\n    marginTop: \"4%\",\r\n    backgroundColor: \"rgb(204, 228, 255)\",\r\n    // maxWidth: 360,\r\n  },\r\n\r\n  submit: {\r\n    marginTop: \"1%\",\r\n    marginBottom: \"1%\",\r\n\r\n    marginLeft: \"38%\",\r\n  },\r\n}));\r\n\r\nfunction Exam() {\r\n\r\n  let correct = 0;\r\n  let wrong = 0;\r\n\r\n  const location = useLocation();\r\n  const examToken = location.state.token;\r\n  const username = location.state.username;\r\n  const password = location.state.password;\r\n  const authToken = Buffer.from(username + \":\" + password, \"utf8\").toString(\r\n    \"base64\"\r\n  );\r\n\r\n  const headers = {\r\n    headers: {\r\n      Authorization: `Basic ${authToken}`,\r\n    },\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [examData, setExamData] = useState({});\r\n  const [examInfo, setExamInfo] = useState({});\r\n  const [result, setResult] = useState({ true: \"\", false: \"\" });\r\n  const [questions, setQuestions] = useState([]);\r\n  const [choices, setChoices] = useState([]);\r\n  const [choiceState, setChoiceState] = useState([]);\r\n\r\n  const registerAndGetExam = async () => {\r\n    await axios\r\n      .get(\r\n        \"api/students/confirm?token=\" + examToken,\r\n        headers\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      });\r\n\r\n    axios\r\n      .get(\"api/exams/token:\" + examToken, {\r\n        headers: {\r\n          Authorization: `Basic ${authToken}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setExamInfo(res.data);\r\n        setExamData(res.data.attendanceList.map((a) => a));\r\n        let questionsArray = [];\r\n        let choicesArray = [];\r\n\r\n        let questions = res.data.questions;\r\n\r\n        questions.forEach((question, index) => {\r\n          questionsArray.push(question.questionTitle);\r\n          let transfer = [];\r\n          question.choices.forEach((choice, i) => {\r\n            transfer.push(choice);\r\n          });\r\n          choicesArray.push(transfer);\r\n        });\r\n\r\n        setChoiceState(() => {\r\n          let choiceStates = choicesArray.map((choice) =>\r\n            choice.map((c) => false)\r\n          );\r\n          return choiceStates;\r\n        });\r\n\r\n        setQuestions(() => questionsArray);\r\n        setChoices(() => choicesArray);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    registerAndGetExam();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  function calculateScore() {\r\n    correct = 0;\r\n    wrong = 0;\r\n    const trueAnswers = choices.map((choice) => choice.map((c) => c.correct));\r\n\r\n    questions.forEach((question, index) => {\r\n      if (choiceState[index].toString() === trueAnswers[index].toString())\r\n        correct++;\r\n      else wrong++;\r\n    });\r\n\r\n    const Attendance = examData[examData.length - 1];\r\n\r\n    const postAttendance = {\r\n      ...Attendance,\r\n      numOfTrues: correct,\r\n      numOfFalses: wrong,\r\n      attended: true,\r\n    };\r\n\r\n\r\n    axios\r\n      .post(\r\n        \"api/students/saveResult\",\r\n        postAttendance,\r\n        headers\r\n      )\r\n      .then((res) => console.log(res));\r\n\r\n    setResult({ true: correct, false: wrong });\r\n\r\n    handleClickOpen();\r\n  }\r\n\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Typography className={classes.typ} variant=\"h6\" component=\"h1\">\r\n        Title: {examInfo.title}\r\n      </Typography>\r\n      <Typography className={classes.typ} variant=\"h6\" component=\"h1\">\r\n        Start Date:{examInfo.startDate}\r\n      </Typography>\r\n      <Typography className={classes.typ} variant=\"h6\" component=\"h1\">\r\n        End Date: {examInfo.endDate}\r\n      </Typography>\r\n      {choices.map((choice, i) => {\r\n        const qIndex = i;\r\n        console.log(examInfo);\r\n        return (\r\n          <Card className={classes.child}>\r\n            {i + 1}. {questions[i]}\r\n            <List>\r\n              {choice.map((c, index) => {\r\n                return (\r\n                  <div>\r\n                    <ListItem role={undefined} button>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            onChange={() =>\r\n                              setChoiceState(() => {\r\n                                console.log(choiceState);\r\n                                choiceState[qIndex][index] = !choiceState[\r\n                                  qIndex\r\n                                ][index];\r\n                                return choiceState;\r\n                              })\r\n                            }\r\n                          />\r\n                        }\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                      />\r\n\r\n                      <ListItemText primary={c.description} />\r\n                    </ListItem>\r\n                  </div>\r\n                );\r\n              })}\r\n            </List>\r\n          </Card>\r\n        );\r\n      })}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.submit}\r\n        startIcon={<CheckCircleOutlineIcon />}\r\n        onClick={calculateScore}\r\n      >\r\n        Submit Exam\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Thanks for participating in exam.\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Correct Answers: {result.true} <br />\r\n            Wrong Answers: {result.false}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      ;\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Exam;\r\n","D:\\ExamSystem\\exam-system\\src\\Components\\ExamCreation.js",[],"D:\\ExamSystem\\exam-system\\src\\Components\\Question.js",[],"D:\\ExamSystem\\exam-system\\src\\Components\\Choice.js",[],"D:\\ExamSystem\\exam-system\\src\\Components\\SignUp.js",["56","57"],"import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\">\r\n        ONLINE EXAM APP\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [credentials, setCred] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setCred({ ...credentials, role: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                onChange={(event) => {\r\n                  setCred({ ...credentials, firstName: event.target.value });\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                onChange={(event) => {\r\n                  setCred({ ...credentials, lastName: event.target.value });\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                onChange={(event) => {\r\n                  setCred({ ...credentials, email: event.target.value });\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={(event) => {\r\n                  setCred({ ...credentials, username: event.target.value });\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={(event) => {\r\n                  setCred({ ...credentials, password: event.target.value });\r\n                }}\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-required-label\">\r\n                  Role\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-required-label\"\r\n                  id=\"demo-simple-select-required\"\r\n                  onChange={handleChange}\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value={\"STUDENT\"}>Student</MenuItem>\r\n                  <MenuItem value={\"INSTRUCTOR\"}>Instructor</MenuItem>\r\n                </Select>\r\n                <FormHelperText>Required</FormHelperText>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              axios\r\n                .post(\r\n                  \"api/registration\",\r\n                  credentials\r\n                )\r\n                .then((res) => console.log(res))\r\n                .catch(error=>console.log(error));\r\n            }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link onClick={() => history.push(\"/\")}>\r\n                Already have an account? Login\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\ExamSystem\\exam-system\\src\\Components\\Login.js",[],"D:\\ExamSystem\\exam-system\\src\\Components\\StudentLogin.js",[],"D:\\ExamSystem\\exam-system\\src\\Components\\SimpleTabs.js",["58"],"import { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ExamCreation from \"./ExamCreation.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    maxWidth: 300,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  examTable: {\r\n    marginLeft: theme.spacing(50),\r\n    maxWidth: 600,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(5),\r\n  },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function SimpleTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const location = useLocation();\r\n  const credentials = {\r\n    username: location.state.credentials.username,\r\n    password: location.state.credentials.password,\r\n  };\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Exam Results\" {...a11yProps(0)} />\r\n          <Tab label=\"Create Exam!\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <InstructorScreen credentials={credentials} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <ExamCreation credentials={credentials} />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InstructorScreen(props) {\r\n  const classes = useStyles();\r\n  const [examInfo, setExamInfo] = useState([]);\r\n  const [attendance, setAttendance] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const credentials = props.credentials;\r\n  const authToken = Buffer.from(\r\n    credentials.username + \":\" + credentials.password,\r\n    \"utf8\"\r\n  ).toString(\"base64\");\r\n\r\n  const headers = {\r\n    headers: {\r\n      Authorization: `Basic ${authToken}`,\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"api/exams/by/\" + credentials.username,\r\n        headers\r\n      )\r\n      .then((res) => {\r\n        let examArray = [];\r\n        let attendanceArray = [];\r\n        let exams = res.data;\r\n\r\n        exams.forEach((exam, index) => {\r\n          examArray.push([exam.title, exam.startDate, exam.endDate]);\r\n          let transfer = [];\r\n          exam.attendanceList.forEach((at, i) => {\r\n            transfer.push(at);\r\n          });\r\n          attendanceArray.push(transfer);\r\n        });\r\n\r\n        setExamInfo(() => examArray);\r\n        setAttendance(() => attendanceArray);\r\n\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <h1>loading</h1>\r\n  ) : (\r\n    <div className={classes.examTable}>\r\n      {examInfo.map((exam, index) => {\r\n        if (JSON.stringify(attendance[index]) === JSON.stringify([]))\r\n          return (\r\n            <TableContainer className={classes.container} component={Paper}>\r\n              <Typography\r\n                component=\"h2\"\r\n                variant=\"h6\"\r\n                color=\"primary\"\r\n                gutterBottom\r\n              >\r\n                Exam Title: {exam[0]} <br />\r\n                Start Date: {exam[1]} <br />\r\n                End Date: {exam[2]} <br />\r\n              </Typography>\r\n              <TableRow>\r\n                <TableCell>Nobody Attended to this exam yet</TableCell>\r\n              </TableRow>\r\n            </TableContainer>\r\n          );\r\n        else\r\n          return (\r\n            <>\r\n              <TableContainer className={classes.container} component={Paper}>\r\n                <Typography\r\n                  component=\"h2\"\r\n                  variant=\"h6\"\r\n                  color=\"primary\"\r\n                  gutterBottom\r\n                >\r\n                  Exam Title: {exam[0]} <br />\r\n                  Start Date: {exam[1]} <br />\r\n                  End Date: {exam[2]} <br />\r\n                </Typography>\r\n                <Table\r\n                  size=\"small\"\r\n                  className={classes.table}\r\n                  aria-label=\"simple table\"\r\n                >\r\n                  <TableHead>\r\n                    Attendances:\r\n                    <TableRow>\r\n                      <TableCell>Student ID</TableCell>\r\n                      <TableCell align=\"right\">Attendance</TableCell>\r\n                      <TableCell align=\"right\">True Answer</TableCell>\r\n                      <TableCell align=\"right\">False Answer</TableCell>\r\n                      <TableCell align=\"right\">Points</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {attendance[index].map((attendance) => {\r\n                      return (\r\n                        <TableRow>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {attendance.studentId}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {String(attendance.attended)}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {attendance.numOfTrues}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {attendance.numOfFalses}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">\r\n                            {attendance.pointReceived}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </>\r\n          );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":25,"nodeType":"65","messageId":"66","endLine":4,"endColumn":29},{"ruleId":"63","severity":1,"message":"67","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":20},{"ruleId":"68","severity":1,"message":"69","line":126,"column":6,"nodeType":"70","endLine":126,"endColumn":8,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"72","line":6,"column":8,"nodeType":"65","messageId":"66","endLine":6,"endColumn":24},{"ruleId":"63","severity":1,"message":"73","line":7,"column":8,"nodeType":"65","messageId":"66","endLine":7,"endColumn":16},{"ruleId":"68","severity":1,"message":"74","line":149,"column":6,"nodeType":"70","endLine":149,"endColumn":8,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'registerAndGetExam'. Either include it or remove the dependency array.","ArrayExpression",["78"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","React Hook useEffect has missing dependencies: 'credentials.username' and 'headers'. Either include them or remove the dependency array.",["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [registerAndGetExam]",{"range":"84","text":"85"},"Update the dependencies array to be: [credentials.username, headers]",{"range":"86","text":"87"},[3619,3621],"[registerAndGetExam]",[4041,4043],"[credentials.username, headers]"]